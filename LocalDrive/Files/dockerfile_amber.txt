# Imagen base de Ubuntu 20.04
FROM ubuntu:20.04

RUN DEBIAN_FRONTEND=noninteractive apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    csh \
    flex \
    patch \
    gfortran \
    g++ \
    make \
    xorg-dev \
    bison \
    libbz2-dev \
    python \
    python-dev \
    python-setuptools \
    openmpi-bin \
    libopenmpi-dev \
    ssh \
    cmake \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Instalar Cuda 11.6
RUN wget https://developer.download.nvidia.com/compute/cuda/11.6.0/local_installers/cuda_11.6.0_510.39.01_linux.run
RUN chmod +x cuda_11.6.0_510.39.01_linux.run
RUN ./cuda_11.6.0_510.39.01_linux.run --toolkit --silent --toolkitpath=/usr/local/cuda-11.6
RUN rm cuda_11.6.0_510.39.01_linux.run

# Instalar Miniconda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
RUN chmod +x miniconda.sh
RUN ./miniconda.sh -b -p /opt/miniconda
RUN rm miniconda.sh

# Agregar conda al PATH
ENV PATH="/opt/miniconda/bin:$PATH"

# Actualizar conda y agregar canales necesarios
RUN conda update -n base -c defaults conda
RUN conda config --add channels conda-forge

# Instalar paquetes de conda si es necesario
# RUN conda install -y nombre-del-paquete

# Agregar variable de entorno LD_LIBRARY_PATH para CUDA
ENV LD_LIBRARY_PATH="/usr/local/cuda-11.6/lib64:$LD_LIBRARY_PATH"

CMD ["/bin/bash"]


